version: 2.1
orbs:
  node: circleci/node@5.0.2
  docker: circleci/docker@2.1.2
  swissknife: roopakv/swissknife@0.69.0

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  proxy:
    type: boolean
    default: false

  services:
    type: boolean
    default: false

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Yarn Package Cache
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Install dependencies
      command: yarn

  build_monorepo: &build_monorepo
    run:
      name: Build monorepo
      command: yarn build

  save_cache: &save_cache
    save_cache:
      name: Save Yarn Package Cache
      key: yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

jobs:
  trigger-workflows:
    executor:
      name: node/default
      tag: "16.17.0"
    working_directory: ~/monorepo
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *build_monorepo
      - <<: *save_cache
      - swissknife/trigger-workflows-for-all-modified:
          base-branch: master
          run-mode-for-base-branch: run_for_last_commit
          use-divergence-point: true
          code-param-name-map: '[
            {"regex": "^(packages\/proxy).*", "param_name": "proxy"},
            {"regex": "^(packages\/services).*", "param_name": "services"}
            ]'
          additional-param-map: '{"trigger": false}'
          use-swissknife-sha: false

workflows:
  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  # Workflows defined for each package.

  proxy:
    when: << pipeline.parameters.proxy >>
    jobs:
      - docker/publish:
          path: packages/proxy
          deploy: false
          image: $CIRCLE_PROJECT_REPONAME/proxy

  services:
    when: << pipeline.parameters.services >>
    jobs:
      - docker/publish:
          path: packages/services
          deploy: false
          image: $CIRCLE_PROJECT_REPONAME/services
